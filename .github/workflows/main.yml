name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: restore build
        continue-on-error: true
        id: restore
        uses: actions/download-artifact@v2
        with:
          name: build_${{github.sha}}

      - name: prepare env
        if: steps.restore.outcome != 'success'
        run: cp ${ENV:-'.github/.env.preview'} .env

      - uses: ./.github/actions/build
        if: steps.restore.outcome != 'success'

  cypress_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: install
        run: npm ci --prefer-offline --no-audit
        shell: bash

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build_${{github.sha}}
          path: build

      - name: test
        uses: cypress-io/github-action@v2
        with:
          headless: true
          install: false
          record: false
          start: npm run start:prod
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:3000'
          command: npm run test
        env:
          CYPRESS_URL: 'http://localhost:3000'
          CYPRESS_TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
          CYPRESS_TENDERLY_KEY: ${{ secrets.TENDERLY_KEY }}
          CYPRESS_TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}

  upload:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      uri: ${{ steps.pinata.outputs.uri }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: install
        run: npm ci --prefer-offline --no-audit
        shell: bash

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build_${{github.sha}}
          path: build

      - name: pinata
        id: pinata
        env:
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET_KEY: ${{ secrets.PINATA_SECRET_KEY }}
          PIN_ALIAS: "${{ format('pull_request_{0}', github.head_ref) }}"
        run: node scripts/pin-pinata.js

      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Preview link: ${{steps.pinata.outputs.uri}}'
            })

  # legacy testing setup till cypress has the same coverage
  test:
    runs-on: ubuntu-latest
    needs: upload
    container: 'wolphin/e2e-image'
    env:
      DOMAIN: '${{ needs.upload.outputs.uri }}'
      LAMBDATEST_ACCOUNT: ${{ secrets.LAMBDATEST_ACCOUNT }}
      LAMBDATEST_KEY: ${{ secrets.LAMBDATEST_KEY }}
      TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
      TENDERLY_KEY: ${{ secrets.TENDERLY_KEY }}
      TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}
    steps:
      - uses: actions/checkout@v2

      - name: install
        run: cd tests && npm ci

      - name: Main
        run: cd tests && BUILD="${GITHUB_REF}_${GITHUB_SHA}" npm run lambdaTest
